#! /bin/sh

PACKAGE_DIR=$(CDPATH= cd -- "$(dirname -- "$0")" && pwd)
HELPERS_DIR=$PACKAGE_DIR/../..
. $HELPERS_DIR/functions.sh

do_make_bdir

do_pkg_fetch libsdl2
do_configure

do_make
do_make install

# SDL uses SDL_config.h to enable features but they depend on architecture being cross-compiled.
# As we use a unified include directory we must trick, so we move SDL_config.h to an arch
# dependent name andwe create a toplevel file which selects the good file to include
mv $PREFIX/include/SDL2/SDL_config.h $PREFIX/include/SDL2/SDL_config_$TARGET.h

cat > $PREFIX/include/SDL2/SDL_config.h <<END
/*
 * This file is a placeholder put in place to allow SDL install in Android unified toolchain
 * This file is NOT part of SDL but generated by build scripts
*/
#if defined(__arm__)
  #include "SDL_config_arm-linux-androideabi.h"
#elif defined(__aarch64__)
  #include "SDL_config_aarch64-linux-android.h"
#elif defined(__i386__)
  #include "SDL_config_i686-linux-android.h"
#elif defined(__x86_64__)
  #include "SDL_config_x86_64-linux-android.h"
#else
  #error "Can't determine target to use, check toolchain build scripts"
#endif
END

do_clean_bdir
