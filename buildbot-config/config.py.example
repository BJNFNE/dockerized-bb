import os

# configuration_dir is where all configuration happens
configuration_dir = os.path.dirname(__file__)
# data_dir is where all builds data is stored: intermediate files, ccache, ...
data_dir = os.path.normpath(os.path.join(configuration_dir, "..", "buildbot-data"))
# snapshots_dir is where all packages are moved and get served
snapshots_dir = os.path.join(data_dir, 'packages', 'snapshots')

# If a relative path is used here, it will be relative to the buildbot base directory, not configuration one
db = {
    "db_url": "sqlite:///state.sqlite"
}

docker_socket = 'unix:///var/run/docker.sock'
docker_workers_net = 'workers-net'

# Which port the Buildbot worker will listen
# It will be used on master side to connect to worker
# and it will be used on worker side to configure worker
pb_protocol_port = 9989

# Environment shared by all builds and builders
# When specifying *FLAGS variables, use ${*FLAGS} to recall worker ones
# Failure to comply implies build failures
common_env = {
    "LC_ALL": "C.UTF-8",
}

# List of platforms enabled
platforms_whitelist = [
]
platforms_blacklist = [
]

# How many builds can be run in parallel
max_parallel_builds = 1
# How many compilers to run in parallel (make -j value)
# Falsy value means to use cpu core count
max_jobs = None

# List which builds won't receive notifications from Webhook
# and must be polled
# Each build entry is in the form
# "name": { poll parameters }
builds_to_poll = {
}

# Github settings
## Secret used when configuring webhook
#github_webhook_secret = None
## Credentials for GitHub OAuth application
#github_auth_clientid = ""
#github_auth_clientsecret = ""
## Define organization and team membership used to determine rights
#github_organisation = "scummvm"
#github_admin_group = "admin-group"

# htpasswd file based authentication
## Plaintext file with username:password lines
#ht_auth_file = './htpasswd'
## List of usernames with admin rights
#ht_auth_admins = ['username']

# UI settings
project_name = "ScummVM"
project_url = "https://scummvm.org/"
# Where web server must listen
www_port = ("127.0.0.1", 8010)
# URL used to reach Buildbot instance
buildbot_url = "https://buildbot.scummvm.org/"
# Retention time for data (in weeks)
data_retention_weeks = 4

# URL used to download snapshots
# If serve_snapshots is True, it will be:
# snapshots_url = buildbot_url + "wsgi_dashboards/snapshots/packages/"
snapshots_url = "https://buildbot.scummvm.org/snapshots/"

enable_list_snapshots = True
# Serving snapshots is only available when listing snapshots too
serve_snapshots = False

# IRC configuration
#irc = {
#    # IRC server configuration: hostname, port, ssl
#    'server': 'chat.freenode.net',
#    'port': 7000,
#    'ssl': True,
#    # nickname and password to identify to NickServ
#    'nick': 'Scummette',
#    'password': 'password',
#    # channels the bot will join and talk to
#    'channels': [
#        '#scummvm',
#        {'channel': '#secret', 'password': 'secret'}
#    ],
#    # nicknames the bot will talk to
#    'nicks': ['someuser'],
#    # nicknames allowed to talk to bot, when commented out bot won't listen at anyone
#    'admins': ['someuser'],
#}

